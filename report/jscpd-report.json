{
  "statistics": {
    "detectionDate": "2025-05-25T08:40:33.911Z",
    "formats": {
      "python": {
        "sources": {
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/sensitivity/test_tornado_errors.py": {
            "lines": 74,
            "tokens": 581,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 521,
            "percentage": 100,
            "percentageTokens": 89.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/sensitivity/test_tornado.py": {
            "lines": 116,
            "tokens": 1025,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 108,
            "duplicatedTokens": 833,
            "percentage": 93.1,
            "percentageTokens": 81.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/sensitivity/test_metrics.py": {
            "lines": 383,
            "tokens": 2558,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 142,
            "duplicatedTokens": 830,
            "percentage": 37.08,
            "percentageTokens": 32.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_safe_parameters.py": {
            "lines": 124,
            "tokens": 849,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_safe_operations.py": {
            "lines": 11,
            "tokens": 0,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_safe_lookup.py": {
            "lines": 97,
            "tokens": 780,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_safe_integration.py": {
            "lines": 62,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_safe_calculations.py": {
            "lines": 93,
            "tokens": 659,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_residual_value_helper.py": {
            "lines": 35,
            "tokens": 276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_calculations.py": {
            "lines": 132,
            "tokens": 921,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 201,
            "percentage": 26.52,
            "percentageTokens": 21.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/utils/test_calculation_optimisations.py": {
            "lines": 252,
            "tokens": 1791,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/ui/test_pages.py": {
            "lines": 149,
            "tokens": 1138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/services/test_tco_calculation_service.py": {
            "lines": 56,
            "tokens": 531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/services/test_scenario_service.py": {
            "lines": 158,
            "tokens": 1070,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 164,
            "percentage": 13.92,
            "percentageTokens": 15.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/services/test_scenario_application_service.py": {
            "lines": 406,
            "tokens": 2703,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/services/test_data_cache.py": {
            "lines": 152,
            "tokens": 1139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/plotters/test_charts.py": {
            "lines": 56,
            "tokens": 508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/test_finance_payload.py": {
            "lines": 119,
            "tokens": 823,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 292,
            "percentage": 30.25,
            "percentageTokens": 35.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/test_finance.py": {
            "lines": 525,
            "tokens": 3175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/test_externalities_proxy.py": {
            "lines": 56,
            "tokens": 520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/test_externalities.py": {
            "lines": 213,
            "tokens": 1896,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 182,
            "percentage": 9.39,
            "percentageTokens": 9.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/test_energy.py": {
            "lines": 48,
            "tokens": 466,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/domain/test_calculation_delegation.py": {
            "lines": 102,
            "tokens": 664,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 201,
            "percentage": 34.31,
            "percentageTokens": 30.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/domain/sensitivity/test_single_param.py": {
            "lines": 447,
            "tokens": 3100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/domain/sensitivity/test_externality.py": {
            "lines": 280,
            "tokens": 1928,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/pages/sensitivity.py": {
            "lines": 176,
            "tokens": 1520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/pages/home.py": {
            "lines": 23,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/pages/cost_breakdown.py": {
            "lines": 86,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/builders/vehicle_builder.py": {
            "lines": 69,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/builders/scenario_builder.py": {
            "lines": 55,
            "tokens": 402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/builders/parameter_builder.py": {
            "lines": 97,
            "tokens": 659,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/builders/charging_builder.py": {
            "lines": 149,
            "tokens": 1094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/builders/__init__.py": {
            "lines": 13,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/test_visualization.py": {
            "lines": 55,
            "tokens": 419,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/test_main.py": {
            "lines": 25,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/unit/test_exceptions.py": {
            "lines": 156,
            "tokens": 975,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/regression/test_golden.py": {
            "lines": 132,
            "tokens": 1062,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/performance/test_performance_optimisations.py": {
            "lines": 236,
            "tokens": 1697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/integration/test_tco_calculation.py": {
            "lines": 455,
            "tokens": 2661,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 98,
            "percentage": 4.18,
            "percentageTokens": 3.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/fixtures/vehicles.py": {
            "lines": 239,
            "tokens": 1302,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 98,
            "percentage": 7.95,
            "percentageTokens": 7.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/fixtures/__init__.py": {
            "lines": 32,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/e2e/test_full_tco_flow.py": {
            "lines": 400,
            "tokens": 2560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/safe_operations.py": {
            "lines": 186,
            "tokens": 835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/pandas_helpers.py": {
            "lines": 95,
            "tokens": 607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/finance.py": {
            "lines": 154,
            "tokens": 756,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/energy.py": {
            "lines": 178,
            "tokens": 1023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/data_access.py": {
            "lines": 88,
            "tokens": 572,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/calculation_optimisations.py": {
            "lines": 206,
            "tokens": 1178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/utils/battery.py": {
            "lines": 101,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/helpers/__init__.py": {
            "lines": 135,
            "tokens": 779,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/sensitivity/tornado.py": {
            "lines": 113,
            "tokens": 874,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 104,
            "percentage": 9.73,
            "percentageTokens": 11.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/sensitivity/single_param.py": {
            "lines": 264,
            "tokens": 1451,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 104,
            "percentage": 4.17,
            "percentageTokens": 7.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/sensitivity/metrics.py": {
            "lines": 139,
            "tokens": 1253,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 84,
            "percentage": 5.76,
            "percentageTokens": 6.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/sensitivity/externality.py": {
            "lines": 84,
            "tokens": 588,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/sensitivity/__init__.py": {
            "lines": 16,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/summary_displays.py": {
            "lines": 81,
            "tokens": 508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/metric_cards.py": {
            "lines": 131,
            "tokens": 742,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/context_builder.py": {
            "lines": 74,
            "tokens": 496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/context.py": {
            "lines": 60,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/components.py": {
            "lines": 21,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/calculation_orchestrator.py": {
            "lines": 391,
            "tokens": 2734,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/ui/__init__.py": {
            "lines": 3,
            "tokens": 0,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/tests/conftest.py": {
            "lines": 13,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/imports.py": {
            "lines": 62,
            "tokens": 237,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/exceptions.py": {
            "lines": 56,
            "tokens": 371,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/data_loading.py": {
            "lines": 82,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/constants.py": {
            "lines": 188,
            "tokens": 937,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/config.py": {
            "lines": 127,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/src/__init__.py": {
            "lines": 77,
            "tokens": 298,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/tco_calculation_service.py": {
            "lines": 473,
            "tokens": 2873,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/scenario_service.py": {
            "lines": 103,
            "tokens": 676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/scenario_application_service.py": {
            "lines": 293,
            "tokens": 2084,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/dtos.py": {
            "lines": 134,
            "tokens": 841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/data_cache.py": {
            "lines": 125,
            "tokens": 970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/services/__init__.py": {
            "lines": 19,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/tornado.py": {
            "lines": 62,
            "tokens": 507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/sensitivity.py": {
            "lines": 130,
            "tokens": 1106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/payload.py": {
            "lines": 145,
            "tokens": 1050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/key_metrics.py": {
            "lines": 94,
            "tokens": 715,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/emissions.py": {
            "lines": 52,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/cost_breakdown.py": {
            "lines": 191,
            "tokens": 1672,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 84,
            "percentage": 4.19,
            "percentageTokens": 5.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/charging_mix.py": {
            "lines": 73,
            "tokens": 534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/plotters/__init__.py": {
            "lines": 18,
            "tokens": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/finance_payload.py": {
            "lines": 137,
            "tokens": 913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/finance.py": {
            "lines": 450,
            "tokens": 3049,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 164,
            "percentage": 4.44,
            "percentageTokens": 5.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/externalities.py": {
            "lines": 314,
            "tokens": 2322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/energy.py": {
            "lines": 175,
            "tokens": 1314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/domain/__init__.py": {
            "lines": 19,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/repositories.py": {
            "lines": 89,
            "tokens": 713,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/main.py": {
            "lines": 44,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/Users/ed/dev/updated_tco/tco_app/__init__.py": {
            "lines": 5,
            "tokens": 0,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 12814,
          "tokens": 86049,
          "sources": 91,
          "clones": 18,
          "duplicatedLines": 284,
          "duplicatedTokens": 1980,
          "percentage": 2.22,
          "percentageTokens": 2.3,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 12814,
      "tokens": 86049,
      "sources": 91,
      "clones": 18,
      "duplicatedLines": 284,
      "duplicatedTokens": 1980,
      "percentage": 2.22,
      "percentageTokens": 2.3,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "python",
      "lines": 21,
      "fragment": ": {}}\n\n    financial_params, battery_params, charging_options, infrastructure_options = _basic_params()\n\n    with pytest.raises(ValueError):\n        calculate_tornado_data(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            financial_params=financial_params,\n            battery_params=battery_params,\n            charging_options=charging_options,\n            infrastructure_options=infrastructure_options,\n            emission_factors=pd.DataFrame(),\n            incentives=pd.DataFrame(),\n            selected_charging=1,\n            selected_infrastructure=1,\n            annual_kms=1000,\n            truck_life_years=5,\n            discount_rate=0.1,\n            fleet_size=1,\n        )",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado_errors.py",
        "start": 55,
        "end": 75,
        "startLoc": {
          "line": 55,
          "column": 15,
          "position": 447
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 581
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado_errors.py",
        "start": 30,
        "end": 50,
        "startLoc": {
          "line": 30,
          "column": 7,
          "position": 264
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 398
        }
      }
    },
    {
      "format": "python",
      "lines": 18,
      "fragment": "financial_params = pd.DataFrame({\n        DataColumns.FINANCE_DESCRIPTION: [ParameterKeys.DIESEL_PRICE],\n        DataColumns.FINANCE_DEFAULT_VALUE: [2.0],\n    })\n    battery_params = pd.DataFrame({\n        DataColumns.BATTERY_DESCRIPTION: [ParameterKeys.REPLACEMENT_COST],\n        DataColumns.BATTERY_DEFAULT_VALUE: [100],\n    })\n    charging_options = pd.DataFrame({\n        DataColumns.CHARGING_ID: [1],\n        DataColumns.PER_KWH_PRICE: [0.30],\n    })\n    infrastructure_options = pd.DataFrame({\n        DataColumns.INFRASTRUCTURE_ID: [1],\n        DataColumns.INFRASTRUCTURE_PRICE: [1000],\n    })\n\n    with",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado.py",
        "start": 13,
        "end": 30,
        "startLoc": {
          "line": 13,
          "column": 5,
          "position": 114
        },
        "endLoc": {
          "line": 30,
          "column": 5,
          "position": 267
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado_errors.py",
        "start": 9,
        "end": 25,
        "startLoc": {
          "line": 9,
          "column": 5,
          "position": 52
        },
        "endLoc": {
          "line": 25,
          "column": 7,
          "position": 204
        }
      }
    },
    {
      "format": "python",
      "lines": 18,
      "fragment": "calculate_tornado_data(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            financial_params=financial_params,\n            battery_params=battery_params,\n            charging_options=charging_options,\n            infrastructure_options=infrastructure_options,\n            emission_factors=pd.DataFrame(),\n            incentives=pd.DataFrame(),\n            selected_charging=1,\n            selected_infrastructure=1,\n            annual_kms=1000,\n            truck_life_years=5,\n            discount_rate=0.1,\n            fleet_size=1,\n        )\n\n    assert",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado.py",
        "start": 35,
        "end": 52,
        "startLoc": {
          "line": 35,
          "column": 2,
          "position": 324
        },
        "endLoc": {
          "line": 52,
          "column": 7,
          "position": 424
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado_errors.py",
        "start": 35,
        "end": 53,
        "startLoc": {
          "line": 35,
          "column": 9,
          "position": 302
        },
        "endLoc": {
          "line": 53,
          "column": 4,
          "position": 402
        }
      }
    },
    {
      "format": "python",
      "lines": 21,
      "fragment": "}\n    diesel_results = {\"vehicle_data\": {}, \"fees\": {}}\n\n    financial_params = pd.DataFrame({\n        DataColumns.FINANCE_DESCRIPTION: [ParameterKeys.DIESEL_PRICE],\n        DataColumns.FINANCE_DEFAULT_VALUE: [2.0],\n    })\n    battery_params = pd.DataFrame({\n        DataColumns.BATTERY_DESCRIPTION: [ParameterKeys.REPLACEMENT_COST],\n        DataColumns.BATTERY_DEFAULT_VALUE: [100],\n    })\n    charging_options = pd.DataFrame({\n        DataColumns.CHARGING_ID: [1],\n        DataColumns.PER_KWH_PRICE: [0.30],\n    })\n    infrastructure_options = pd.DataFrame({\n        DataColumns.INFRASTRUCTURE_ID: [1],\n        DataColumns.INFRASTRUCTURE_PRICE: [1000],\n    })\n\n    def",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado.py",
        "start": 66,
        "end": 86,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 557
        },
        "endLoc": {
          "line": 86,
          "column": 4,
          "position": 734
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado.py",
        "start": 10,
        "end": 25,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 90
        },
        "endLoc": {
          "line": 25,
          "column": 7,
          "position": 204
        }
      }
    },
    {
      "format": "python",
      "lines": 18,
      "fragment": "result = calculate_tornado_data(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            financial_params=financial_params,\n            battery_params=battery_params,\n            charging_options=charging_options,\n            infrastructure_options=infrastructure_options,\n            emission_factors=pd.DataFrame(),\n            incentives=pd.DataFrame(),\n            selected_charging=1,\n            selected_infrastructure=1,\n            annual_kms=1000,\n            truck_life_years=5,\n            discount_rate=0.1,\n            fleet_size=1,\n        )\n\n    assert result[\"base_tco\"] == 1.5",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado.py",
        "start": 96,
        "end": 113,
        "startLoc": {
          "line": 96,
          "column": 9,
          "position": 845
        },
        "endLoc": {
          "line": 113,
          "column": 4,
          "position": 958
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_tornado.py",
        "start": 35,
        "end": 52,
        "startLoc": {
          "line": 35,
          "column": 9,
          "position": 320
        },
        "endLoc": {
          "line": 52,
          "column": 4,
          "position": 433
        }
      }
    },
    {
      "format": "python",
      "lines": 19,
      "fragment": ",\n        }\n\n        diesel_results = {\n            \"acquisition_cost\": 150000,\n            \"residual_value\": 30000,\n            \"annual_costs\": {\"annual_operating_cost\": 75000},\n            \"emissions\": {\"lifetime_emissions\": 938000},\n            \"tco\": {\"npv_total_cost\": 850000},\n        }\n\n        metrics = calculate_comparative_metrics(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            annual_kms=100000,\n            truck_life_years=10,\n        )\n\n        # The battery replacement should affect the price parity year",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 169,
        "end": 187,
        "startLoc": {
          "line": 169,
          "column": 7,
          "position": 1085
        },
        "endLoc": {
          "line": 187,
          "column": 62,
          "position": 1189
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 138,
        "end": 156,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 868
        },
        "endLoc": {
          "line": 156,
          "column": 86,
          "position": 972
        }
      }
    },
    {
      "format": "python",
      "lines": 19,
      "fragment": "},\n        }\n\n        diesel_results = {\n            \"acquisition_cost\": 150000,\n            \"residual_value\": 30000,\n            \"annual_costs\": {\"annual_operating_cost\": 75000},\n            \"emissions\": {\"lifetime_emissions\": 938000},\n            \"tco\": {\"npv_total_cost\": 850000},\n        }\n\n        metrics = calculate_comparative_metrics(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            annual_kms=100000,\n            truck_life_years=10,\n        )\n\n        # Price parity should be infinity if never reached",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 228,
        "end": 246,
        "startLoc": {
          "line": 228,
          "column": 8,
          "position": 1483
        },
        "endLoc": {
          "line": 246,
          "column": 51,
          "position": 1588
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 138,
        "end": 156,
        "startLoc": {
          "line": 138,
          "column": 13,
          "position": 867
        },
        "endLoc": {
          "line": 156,
          "column": 86,
          "position": 972
        }
      }
    },
    {
      "format": "python",
      "lines": 19,
      "fragment": "},\n        }\n\n        diesel_results = {\n            \"acquisition_cost\": 150000,\n            \"residual_value\": 30000,\n            \"annual_costs\": {\"annual_operating_cost\": 75000},\n            \"emissions\": {\"lifetime_emissions\": 938000},\n            \"tco\": {\"npv_total_cost\": 850000},\n        }\n\n        metrics = calculate_comparative_metrics(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            annual_kms=100000,\n            truck_life_years=10,\n        )\n\n        # With infrastructure replacement at year 5, price parity should be delayed",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 263,
        "end": 281,
        "startLoc": {
          "line": 263,
          "column": 13,
          "position": 1722
        },
        "endLoc": {
          "line": 281,
          "column": 76,
          "position": 1827
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 138,
        "end": 156,
        "startLoc": {
          "line": 138,
          "column": 13,
          "position": 867
        },
        "endLoc": {
          "line": 156,
          "column": 86,
          "position": 972
        }
      }
    },
    {
      "format": "python",
      "lines": 18,
      "fragment": "}\n\n        diesel_results = {\n            \"acquisition_cost\": 150000,\n            \"residual_value\": 30000,\n            \"annual_costs\": {\"annual_operating_cost\": 75000},\n            \"emissions\": {\"lifetime_emissions\": 938000},\n            \"tco\": {\"npv_total_cost\": 850000},\n        }\n\n        metrics = calculate_comparative_metrics(\n            bev_results=bev_results,\n            diesel_results=diesel_results,\n            annual_kms=100000,\n            truck_life_years=10,\n        )\n\n        # Should handle negative NPV correctly",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 321,
        "end": 338,
        "startLoc": {
          "line": 321,
          "column": 9,
          "position": 2111
        },
        "endLoc": {
          "line": 338,
          "column": 39,
          "position": 2212
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/sensitivity/test_metrics.py",
        "start": 139,
        "end": 156,
        "startLoc": {
          "line": 139,
          "column": 9,
          "position": 871
        },
        "endLoc": {
          "line": 156,
          "column": 86,
          "position": 972
        }
      }
    },
    {
      "format": "python",
      "lines": 12,
      "fragment": "(self):\n        scenario_params = pd.DataFrame([\n            {\n                \"scenario_id\": \"S1\",\n                \"parameter_table\": \"financial_params\",\n                \"parameter_name\": \"diesel_price\",\n                \"parameter_value\": 2.5,\n            }\n        ])\n        stub = self._stub_streamlit()\n        with patch(\"tco_app.services.scenario_service.st\", stub):\n            scenario_service.display_scenario_parameters(\"S000\"",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/services/test_scenario_service.py",
        "start": 146,
        "end": 157,
        "startLoc": {
          "line": 146,
          "column": 27,
          "position": 963
        },
        "endLoc": {
          "line": 157,
          "column": 7,
          "position": 1045
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/services/test_scenario_service.py",
        "start": 128,
        "end": 141,
        "startLoc": {
          "line": 128,
          "column": 25,
          "position": 836
        },
        "endLoc": {
          "line": 141,
          "column": 5,
          "position": 922
        }
      }
    },
    {
      "format": "python",
      "lines": 19,
      "fragment": "standard_financial_params = pd.DataFrame(\n            [\n                {\"finance_description\": \"diesel_price\", \"default_value\": 2.0},\n                {\"finance_description\": \"discount_rate_percent\", \"default_value\": 0.07},\n                {\n                    \"finance_description\": \"freight_value_per_tonne\",\n                    \"default_value\": 120,\n                },\n                {\"finance_description\": \"driver_cost_hourly\", \"default_value\": 35},\n                {\"finance_description\": \"avg_trip_distance\", \"default_value\": 100},\n                {\"finance_description\": \"avg_loadunload_time\", \"default_value\": 1},\n            ]\n        )\n\n        penalty = calculate_payload_penalty_costs(\n            bev_results, diesel_results, standard_financial_params\n        )\n\n        assert penalty[\"has_penalty\"] is True",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/test_finance_payload.py",
        "start": 102,
        "end": 120,
        "startLoc": {
          "line": 102,
          "column": 9,
          "position": 675
        },
        "endLoc": {
          "line": 120,
          "column": 5,
          "position": 821
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/test_finance_payload.py",
        "start": 46,
        "end": 64,
        "startLoc": {
          "line": 46,
          "column": 9,
          "position": 275
        },
        "endLoc": {
          "line": 64,
          "column": 6,
          "position": 421
        }
      }
    },
    {
      "format": "python",
      "lines": 11,
      "fragment": "assert math.isclose(res[\"externality_per_km\"], expected_per_km)\n        assert res[\"breakdown\"] == {\n            \"CO2e\": {\n                \"cost_per_km\": expected_per_km,\n                \"annual_cost\": expected_per_km * 10000,\n                \"lifetime_cost\": expected_per_km * 10000 * 5,\n                \"npv_cost\": expected_per_km * 10000 * 5,\n            }\n        }\n\n    def test_helper_delegation_detailed",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/test_externalities.py",
        "start": 65,
        "end": 75,
        "startLoc": {
          "line": 65,
          "column": 9,
          "position": 655
        },
        "endLoc": {
          "line": 75,
          "column": 32,
          "position": 746
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/domain/test_externalities.py",
        "start": 45,
        "end": 55,
        "startLoc": {
          "line": 45,
          "column": 9,
          "position": 456
        },
        "endLoc": {
          "line": 55,
          "column": 48,
          "position": 547
        }
      }
    },
    {
      "format": "python",
      "lines": 19,
      "fragment": "@pytest.fixture\ndef dummy_financial_params():\n    return pd.DataFrame(\n        [\n            {\"finance_description\": \"diesel_price\", \"default_value\": 2.0},\n        ]\n    )\n\n\n@pytest.fixture\ndef dummy_charging_options():\n    return pd.DataFrame(\n        [\n            {\"charging_id\": \"C1\", \"per_kwh_price\": 0.25},\n        ]\n    )\n\n\ndef",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/test_calculation_delegation.py",
        "start": 14,
        "end": 32,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 117
        },
        "endLoc": {
          "line": 32,
          "column": 4,
          "position": 207
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/utils/test_calculations.py",
        "start": 12,
        "end": 30,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 83
        },
        "endLoc": {
          "line": 30,
          "column": 8,
          "position": 173
        }
      }
    },
    {
      "format": "python",
      "lines": 18,
      "fragment": "vehicle_data = {\n        \"vehicle_drivetrain\": Drivetrain.BEV,\n        \"battery_capacity_kwh\": 400,\n    }\n    battery_params = pd.DataFrame(\n        [\n            {\"battery_description\": \"replacement_per_kwh_price\", \"default_value\": 100},\n            {\n                \"battery_description\": \"degradation_annual_percent\",\n                \"default_value\": 0.05,\n            },\n            {\"battery_description\": \"minimum_capacity_percent\", \"default_value\": 0.7},\n        ]\n    )\n    life_years = 8\n    rate = 0.07\n\n    expected",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/unit/domain/test_calculation_delegation.py",
        "start": 77,
        "end": 94,
        "startLoc": {
          "line": 77,
          "column": 5,
          "position": 466
        },
        "endLoc": {
          "line": 94,
          "column": 9,
          "position": 577
        }
      },
      "secondFile": {
        "name": "tco_app/tests/unit/utils/test_calculations.py",
        "start": 103,
        "end": 120,
        "startLoc": {
          "line": 103,
          "column": 5,
          "position": 691
        },
        "endLoc": {
          "line": 120,
          "column": 61,
          "position": 802
        }
      }
    },
    {
      "format": "python",
      "lines": 20,
      "fragment": "return pd.DataFrame(\n        [\n            {\n                \"vehicle_class\": \"Articulated\",\n                \"drivetrain\": Drivetrain.BEV,\n                \"pollutant_type\": \"externalities_total\",\n                \"cost_per_km\": 0.03,\n            },\n            {\n                \"vehicle_class\": \"Articulated\",\n                \"drivetrain\": Drivetrain.DIESEL,\n                \"pollutant_type\": \"externalities_total\",\n                \"cost_per_km\": 0.07,\n            },\n        ]\n    )\n\n\n@pytest.fixture\ndef standard_infrastructure_options",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/tests/fixtures/vehicles.py",
        "start": 182,
        "end": 201,
        "startLoc": {
          "line": 182,
          "column": 5,
          "position": 991
        },
        "endLoc": {
          "line": 201,
          "column": 32,
          "position": 1089
        }
      },
      "secondFile": {
        "name": "tco_app/tests/integration/test_tco_calculation.py",
        "start": 217,
        "end": 235,
        "startLoc": {
          "line": 217,
          "column": 9,
          "position": 1279
        },
        "endLoc": {
          "line": 235,
          "column": 11,
          "position": 1378
        }
      }
    },
    {
      "format": "python",
      "lines": 12,
      "fragment": ": pd.DataFrame,\n    emission_factors: pd.DataFrame,\n    incentives: pd.DataFrame,\n    selected_charging: Any,\n    selected_infrastructure: Any,\n    annual_kms: int,\n    truck_life_years: int,\n    discount_rate: float,\n    fleet_size: int,\n    charging_mix: Dict[int, float] | None = None,\n    apply_incentives: bool = True,\n) -> List",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/domain/sensitivity/single_param.py",
        "start": 50,
        "end": 61,
        "startLoc": {
          "line": 50,
          "column": 15,
          "position": 266
        },
        "endLoc": {
          "line": 61,
          "column": 5,
          "position": 370
        }
      },
      "secondFile": {
        "name": "tco_app/domain/sensitivity/tornado.py",
        "start": 29,
        "end": 40,
        "startLoc": {
          "line": 29,
          "column": 23,
          "position": 152
        },
        "endLoc": {
          "line": 40,
          "column": 5,
          "position": 256
        }
      }
    },
    {
      "format": "python",
      "lines": 9,
      "fragment": "for year in range(1, truck_life_years):\n        bev_annual = bev_results[\"annual_costs\"][\"annual_operating_cost\"]\n        diesel_annual = diesel_results[\"annual_costs\"][\"annual_operating_cost\"]\n\n        if bev_results.get(\"battery_replacement_year\") == year:\n            bev_annual += bev_results.get(\"battery_replacement_cost\", 0)\n\n        if \"infrastructure_costs\" in bev_results:\n            infra_maintenance",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/plotters/cost_breakdown.py",
        "start": 104,
        "end": 112,
        "startLoc": {
          "line": 104,
          "column": 5,
          "position": 830
        },
        "endLoc": {
          "line": 112,
          "column": 18,
          "position": 914
        }
      },
      "secondFile": {
        "name": "tco_app/domain/sensitivity/metrics.py",
        "start": 45,
        "end": 53,
        "startLoc": {
          "line": 45,
          "column": 5,
          "position": 361
        },
        "endLoc": {
          "line": 53,
          "column": 6,
          "position": 445
        }
      }
    },
    {
      "format": "python",
      "lines": 11,
      "fragment": "and vehicle_data[DataColumns.VEHICLE_DRIVETRAIN] == Drivetrain.BEV\n    ):\n        active = incentives_data[\n            (incentives_data[\"incentive_flag\"] == 1)\n            & (\n                (incentives_data[\"drivetrain\"] == Drivetrain.BEV)\n                | (incentives_data[\"drivetrain\"] == Drivetrain.ALL)\n            )\n        ]\n\n        purchase_rebate",
      "tokens": 0,
      "firstFile": {
        "name": "tco_app/domain/finance.py",
        "start": 191,
        "end": 201,
        "startLoc": {
          "line": 191,
          "column": 9,
          "position": 1267
        },
        "endLoc": {
          "line": 201,
          "column": 16,
          "position": 1349
        }
      },
      "secondFile": {
        "name": "tco_app/domain/finance.py",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 9,
          "position": 591
        },
        "endLoc": {
          "line": 110,
          "column": 23,
          "position": 673
        }
      }
    }
  ]
}